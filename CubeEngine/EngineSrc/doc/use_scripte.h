/**
  \page use_script 使用脚本
  \tableofcontents
  \section 简介
  为了快速开发以及游戏在不替换二进制文件下进行热更新，Cube Engine brand new 亦不能免俗的实现了一套接口，将绝大部分的C++API以及各个类的层次关系全部都暴露给了脚本。
  \section 使用的脚本
  在这里我选中AngelScript作为引擎脚本语言，我认为其优点是强类型的脚本语言，因此将极大的方便用户在脚本端构建整个游戏的系统，同时它的语法非常贴合C++,第三，强类型的脚本语言使
  得我导出的工作量极速的减少，在实现了一些脚本的封装宏和模版作处理后，基本上导出一个类所需要的warpper代码行数等于其所有成员函数的个数，对我个人而言所在精力非常之小，效率很高
  因此，在脚本开发时几乎可以"一比一"的按照C++开发的方式进行，当然这里有一些例外。
  \section 脚本的必要
  如同\ref res_page 引擎资源目录的规划 上所言，必须要有一个entry.as的脚本文件，同时该文件中必须要实现一些全局函数如下：
  \code
  void main()
  {
    print("hello");
  }
  void CE_update(float delta)
  {
  }
  \endcode
  其中：
  - void main() 是脚本的入口函数，当引擎初始化完成之后便会调用这个函数，这个main函数在引擎的整个运行期间仅被调用一次，用户可以在其函数体内做一些初始化的工作

  - void CE_update(float delta) 是脚本的更新函数，每当引擎在绘制一帧之前都会调用该函数，其参数float delta 是前一帧的间隔时间(以秒为单位)，亦即帧率的倒数，
  你可以让精灵在做变换时乘上它，以保证在不同帧率的机器上，变换的速度是一致的。
**/
